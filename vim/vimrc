" ----------------------------------------------------
" vimrc config
" author zhangyan
" since 2020-09-20
" ----------------------------------------------------

set nowrap                   "
set smartcase                "
set noswapfile               "
set nobackup                 "
set undodir=~/.vim/undodir   "
set undofile                 "
set colorcolumn=80           " 
set guifont=Monaco           " 适合Ruby开发的字体 && 字号
set tabstop=4                " 设置编辑时制表符占用4个空格
set softtabstop=4            " 设置格式化时制表符占用4个空格
set shiftwidth=4             " 换行时行间交错使用4个空格
set autoindent               " 自动对齐
set expandtab                " 设置Tab为空格
set noexpandtab              " 设置空格为Tab
set backspace=2              " 设置退格键可用
set cindent shiftwidth=2     " 自动缩进4空格
set smartindent              " 智能自动缩进
set ai!                      " 设置自动缩进
set nu!                      " 显示行号
set mouse=a                  " 启用鼠标
set ruler                    " 右下角显示光标位置的状态行
set incsearch                " 查找book时，当输入/b时会自动找到
set hlsearch                 " 开启高亮显示结果
set incsearch                " 开启实时搜索功能
set wrapscan                 " 搜索到文件两端时重新搜索
set nocompatible             " 关闭兼容模式
set vb t_vb=                 " 关闭提示音
"set hidden                   " 允许在有未保存的修改时切换缓冲区
set list                     " 显示Tab符，使用一高亮竖线代替
set listchars=tab:\|\ ,
set ignorecase               " 搜索时大小写不敏感

" 设置vim为不兼容vi模式
if &compatible
  set nocompatible
endif

set history=200              " 保存200条历史记录
set ruler                    " 显示光标当前位置
set showcmd                  " 右下角显示未完成的指令输入
set wildmenu                 " 启用增强模式的命令行补全
set ttimeout                 " time out for key codes
set ttimeoutlen=100          " wait up to 100ms after Esc for special key
set display=truncate         " Show @@@ in the last line if it is truncated.
set scrolloff=10             " 垂直滚动时，光标距离顶部/底部的位置

" ----------------------------------------------------

syntax enable                " 打开语法高亮
syntax on                    " 开启文件类型侦测

highlight ColorColumn ctermbg=0 guibg=lightgrey

"colorscheme solarized8       " 主题


" Vundle plugins ----------------------------------------------------

" 安装新插件后，在 vim 中运行 :PluginInstall   或 bash 中运行 vim +PluginInstall +qall

filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()                             " begin

Plugin 'VundleVim/Vundle.vim'                   " Vundle
"Plugin 'scrooloose/nerdtree'                    " 目录树


call vundle#end()                               " end


filetype plugin on                              " 针对不同的文件类型加载对应的插件
filetype indent on                              " 针对不同的文件类型采用不同的缩进格式
filetype plugin indent on                       " 用自动补全，必须有

" NERDTree config ----------------------------------------------------

" open a NERDTree automatically when vim starts up
"autocmd vimenter * NERDTree           

" open a NERDTree automatically when vim starts up if no files were specified
"autocmd StdinReadPre * let s:std_in=1

"autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" open NERDTree automatically when vim starts up on opening a directory
"autocmd StdinReadPre * let s:std_in=1

"autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" map F2 to open NERDTree
"map <F2> :NERDTreeToggle<CR>

" close vim if the only window left open is a NERDTree
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

"let g:NERDTreeWinPos = "right"

